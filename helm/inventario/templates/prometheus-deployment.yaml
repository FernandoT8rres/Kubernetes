apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.monitoring.prometheus.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: "{{ .Values.monitoring.prometheus.image.repository }}:{{ .Values.monitoring.prometheus.image.tag }}"
        imagePullPolicy: {{ .Values.monitoring.prometheus.image.pullPolicy }}
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention.time=15d"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          {{- toYaml .Values.monitoring.prometheus.resources | nindent 12 }}
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        {{- if .Values.monitoring.prometheus.persistence.enabled }}
        persistentVolumeClaim:
          claimName: prometheus-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
